{"ast":null,"code":"var _jsxFileName = \"/Users/shreeshjha/Dev/Github/flashTrading/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [orderCount, setOrderCount] = useState(0);\n\n  // Fetch the current order count when the component mounts.\n  useEffect(() => {\n    fetch('http://localhost:18080/order_count').then(response => response.json()).then(data => setOrderCount(data.order_count)).catch(error => console.error('Error:', error));\n  }, []);\n\n  // Function to add a random order.\n  const addOrder = () => {\n    const order = {\n      id: Math.floor(Math.random() * 10000),\n      price: parseFloat((Math.random() * 100 + 50).toFixed(2)),\n      // Random price between 50 and 150.\n      quantity: Math.floor(Math.random() * 100 + 1),\n      // Random quantity between 1 and 100.\n      side: \"B\"\n    };\n    fetch('http://localhost:18080/add_order', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(order)\n    }).then(response => response.text()).then(() => {\n      // Refresh the order count.\n      return fetch('http://localhost:18080/order_count');\n    }).then(response => response.json()).then(data => setOrderCount(data.order_count)).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trading Simulator Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Order Count: \", orderCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addOrder,\n      children: \"Add Random Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9CofCg/bdBA6KRT5WoWVJLLQIWs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","orderCount","setOrderCount","fetch","then","response","json","data","order_count","catch","error","console","addOrder","order","id","Math","floor","random","price","parseFloat","toFixed","quantity","side","method","headers","body","JSON","stringify","text","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/shreeshjha/Dev/Github/flashTrading/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [orderCount, setOrderCount] = useState(0);\n\n  // Fetch the current order count when the component mounts.\n  useEffect(() => {\n    fetch('http://localhost:18080/order_count')\n      .then(response => response.json())\n      .then(data => setOrderCount(data.order_count))\n      .catch(error => console.error('Error:', error));\n  }, []);\n\n  // Function to add a random order.\n  const addOrder = () => {\n    const order = {\n      id: Math.floor(Math.random() * 10000),\n      price: parseFloat((Math.random() * 100 + 50).toFixed(2)), // Random price between 50 and 150.\n      quantity: Math.floor(Math.random() * 100 + 1),            // Random quantity between 1 and 100.\n      side: \"B\"\n    };\n\n    fetch('http://localhost:18080/add_order', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(order)\n    })\n    .then(response => response.text())\n    .then(() => {\n      // Refresh the order count.\n      return fetch('http://localhost:18080/order_count');\n    })\n    .then(response => response.json())\n    .then(data => setOrderCount(data.order_count))\n    .catch(error => console.error('Error:', error));\n  };\n\n  return (\n    <div style={{padding: \"2rem\"}}>\n      <h1>Trading Simulator Dashboard</h1>\n      <p>Current Order Count: {orderCount}</p>\n      <button onClick={addOrder}>Add Random Order</button>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,aAAa,CAACK,IAAI,CAACC,WAAW,CAAC,CAAC,CAC7CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,KAAK,GAAG;MACZC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;MACrCC,KAAK,EAAEC,UAAU,CAAC,CAACJ,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,EAAEG,OAAO,CAAC,CAAC,CAAC,CAAC;MAAE;MAC1DC,QAAQ,EAAEN,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;MAAa;MAC1DK,IAAI,EAAE;IACR,CAAC;IAEDnB,KAAK,CAAC,kCAAkC,EAAE;MACxCoB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,KAAK;IAC5B,CAAC,CAAC,CACDT,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACuB,IAAI,CAAC,CAAC,CAAC,CACjCxB,IAAI,CAAC,MAAM;MACV;MACA,OAAOD,KAAK,CAAC,oCAAoC,CAAC;IACpD,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,aAAa,CAACK,IAAI,CAACC,WAAW,CAAC,CAAC,CAC7CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACjD,CAAC;EAED,oBACEZ,OAAA;IAAK+B,KAAK,EAAE;MAACC,OAAO,EAAE;IAAM,CAAE;IAAAC,QAAA,gBAC5BjC,OAAA;MAAAiC,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCrC,OAAA;MAAAiC,QAAA,GAAG,uBAAqB,EAAC9B,UAAU;IAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCrC,OAAA;MAAQsC,OAAO,EAAExB,QAAS;MAAAmB,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACnC,EAAA,CA1CQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}