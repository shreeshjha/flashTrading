{"ast":null,"code":"var _jsxFileName = \"/Users/shreeshjha/Dev/Github/flashTrading/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [orderCount, setOrderCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch order count\n  const fetchOrderCount = async () => {\n    try {\n      const response = await fetch('http://localhost:18080/order_count', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setOrderCount(data.order_count);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching order count:', error);\n      setError('Failed to fetch order count');\n    }\n  };\n\n  // Fetch the current order count when the component mounts\n  useEffect(() => {\n    fetchOrderCount();\n  }, []);\n\n  // Function to add a random order\n  const addOrder = async () => {\n    setLoading(true);\n    setError(null);\n    const order = {\n      id: Math.floor(Math.random() * 10000),\n      price: parseFloat((Math.random() * 100 + 50).toFixed(2)),\n      // Random price between 50 and 150\n      quantity: Math.floor(Math.random() * 100 + 1),\n      // Random quantity between 1 and 100\n      side: Math.random() < 0.5 ? 'B' : 'S' // Randomly choose Buy or Sell\n    };\n    try {\n      // First, add the order\n      const addResponse = await fetch('http://localhost:18080/add_order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(order)\n      });\n      if (!addResponse.ok) {\n        throw new Error(`Failed to add order: ${addResponse.status}`);\n      }\n\n      // Then refresh the order count\n      await fetchOrderCount();\n      console.log('Order added successfully:', order);\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to add order');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trading Simulator Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Order Count: \", orderCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addOrder,\n      disabled: loading,\n      style: {\n        padding: '8px 16px',\n        fontSize: '16px',\n        cursor: loading ? 'not-allowed' : 'pointer',\n        backgroundColor: loading ? '#cccccc' : '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        marginBottom: '16px'\n      },\n      children: loading ? 'Adding Order...' : 'Add Random Order'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '10px'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Last Added Order Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        id: \"orderDetails\",\n        style: {\n          backgroundColor: '#f5f5f5',\n          padding: '10px',\n          borderRadius: '4px',\n          overflow: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aP7fBXyP0ejvgihEByRRm0FxE2Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","orderCount","setOrderCount","loading","setLoading","error","setError","fetchOrderCount","response","fetch","method","headers","ok","Error","status","data","json","order_count","console","addOrder","order","id","Math","floor","random","price","parseFloat","toFixed","quantity","side","addResponse","body","JSON","stringify","log","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","fontSize","cursor","backgroundColor","color","border","borderRadius","marginBottom","marginTop","overflow","_c","$RefreshReg$"],"sources":["/Users/shreeshjha/Dev/Github/flashTrading/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [orderCount, setOrderCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch order count\n  const fetchOrderCount = async () => {\n    try {\n      const response = await fetch('http://localhost:18080/order_count', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setOrderCount(data.order_count);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching order count:', error);\n      setError('Failed to fetch order count');\n    }\n  };\n\n  // Fetch the current order count when the component mounts\n  useEffect(() => {\n    fetchOrderCount();\n  }, []);\n\n  // Function to add a random order\n  const addOrder = async () => {\n    setLoading(true);\n    setError(null);\n\n    const order = {\n      id: Math.floor(Math.random() * 10000),\n      price: parseFloat((Math.random() * 100 + 50).toFixed(2)), // Random price between 50 and 150\n      quantity: Math.floor(Math.random() * 100 + 1), // Random quantity between 1 and 100\n      side: Math.random() < 0.5 ? 'B' : 'S' // Randomly choose Buy or Sell\n    };\n\n    try {\n      // First, add the order\n      const addResponse = await fetch('http://localhost:18080/add_order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(order)\n      });\n\n      if (!addResponse.ok) {\n        throw new Error(`Failed to add order: ${addResponse.status}`);\n      }\n\n      // Then refresh the order count\n      await fetchOrderCount();\n      \n      console.log('Order added successfully:', order);\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to add order');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      <h1>Trading Simulator Dashboard</h1>\n      \n      <p>Current Order Count: {orderCount}</p>\n      \n      <button \n        onClick={addOrder} \n        disabled={loading}\n        style={{\n          padding: '8px 16px',\n          fontSize: '16px',\n          cursor: loading ? 'not-allowed' : 'pointer',\n          backgroundColor: loading ? '#cccccc' : '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          marginBottom: '16px'\n        }}\n      >\n        {loading ? 'Adding Order...' : 'Add Random Order'}\n      </button>\n\n      {error && (\n        <p style={{ color: 'red', marginTop: '10px' }}>\n          Error: {error}\n        </p>\n      )}\n\n      <div style={{ marginTop: '20px' }}>\n        <h3>Last Added Order Details:</h3>\n        <pre id=\"orderDetails\" style={{ \n          backgroundColor: '#f5f5f5', \n          padding: '10px', \n          borderRadius: '4px',\n          overflow: 'auto' \n        }}>\n          {/* Order details will be logged to console */}\n        </pre>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}